version: "3.5"

networks:
  # because we have an internal network, the credentials doesn't matter
  internal:
    name: outline-internal
    external: false

volumes:
    letsencrypt:
      name: outline-https-certs
      driver: local
    minio:
      name: outline-s3
      driver: local
    pgdata:
      name: outline-pgdata
      driver: local

services:
  # Redis for cache and communication
  redis:
    image: redis
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    restart: always
  # Postgres as main database
  postgres:
    image: postgres
    networks:
      - internal
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pg-password
      POSTGRES_DB: outline
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
  # Using Minio as an S3 storage
  minio:
    image: minio/minio
    volumes:
      - minio:/data
    networks:
      - internal
    environment:
      MINIO_ACCESS_KEY: 00e1b8e6fb0f3958
      MINIO_SECRET_KEY: 89446611d72957f56efcfeb8f8cc375265d41d6d21f0a126ed9cb611b2521321
      MINIO_BROWSER: "off"
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: really_secret_pass_with_should_be_touched
    command: server --address 0.0.0.0:9000 /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:9000/minio/health/live"]
      interval: 1m30s
      timeout: 20s
      retries: 3
    restart: always

  # the actual wiki
  wiki:
    image: outlinewiki/outline:latest
    command: sh -c "yarn sequelize:migrate --env production-ssl-disabled && yarn start --env production-ssl-disabled"
    environment:
      SECRET_KEY: aa85fed80f008c1d98b65c29ab8dbf828de0d947a2586beb4cc8f219c47ef706
      UTILS_SECRET: bb48222830bb69a0e10a416f03182905399168719023f2980a201d768a8de6b6
      URL: http://localhost:3000
      PORT: 3000
      # Databases:
      DATABASE_URL: postgres://postgres:pg-password@postgres:5432/outline?ssl=true
      DATABASE_URL_TEST: postgres://postgres:pg-password@postgres:5432/outline-test?ssl=true
      REDIS_URL: redis://redis:6379
      # S3 Storage specific:
      AWS_ACCESS_KEY_ID: 00e1b8e6fb0f3958
      AWS_SECRET_ACCESS_KEY: 89446611d72957f56efcfeb8f8cc375265d41d6d21f0a126ed9cb611b2521321
      AWS_S3_UPLOAD_BUCKET_URL: http://minio:4569
      AWS_S3_UPLOAD_BUCKET_NAME: outline
      AWS_REGION: xx-xxxx-x
      AWS_S3_UPLOAD_MAX_SIZE: 26214400
      AWS_S3_FORCE_PATH_STYLE: "true"
      AWS_S3_ACL: private
    restart: always
    networks:
      - internal
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

  # nginx is working as a proxy
  proxy:
    image: staticfloat/nginx-certbot
    ports:
      - 80:80/tcp
      - 443:443/tcp
    networks:
      - internal
    environment:
      CERTBOT_EMAIL: owner@example.com
    volumes:
      - ./conf.d:/etc/nginx/user.conf.d:ro
      - letsencrypt:/etc/letsencrypt       
    restart: always
    depends_on:
      - wiki
